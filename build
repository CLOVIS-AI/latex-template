#!/bin/bash

# Logging the LaTeX
TMP=$(mktemp)
echo "This session will be written at: $TMP"
echo ""
echo "RUNNING $0 $*" >> $TMP

# Gets data about a file
#   - $NAME          Name of the file (path, no extension)
#   - $NAME_NO_PATH  Name of the file (no path, no extension)
#   - $DIR           Name of the directory (only path)
function FILENAME {
	echo "\nSearching filename data for $1" >> $TMP

	NAME=$(basename -- "${1}")
	NAME="${1%.*}"
	echo "  Name of the file: $NAME" >> $TMP

	DIR=$(dirname -- "${1}")
	echo "  Name of the directory: $DIR" >> $TMP

	NAME_NO_PATH=${NAME#$DIR}
	NAME_NO_PATH=${NAME_NO_PATH#"/"}
	echo "  Name of the file without the path: $NAME_NO_PATH" >> $TMP
}

# Requires the script to be running in the file's directory
function REQ_WD {
	FILENAME $1
	cd $DIR
}

function FIRSTRUN {
	echo "\nLaTeX first run:" >> $TMP
	echo -n "$1 ["
	latex -shell-escape $NAME_NO_PATH.tex >$TMP
	echo -n '='
}

function BIBLIO {
	FIRSTRUN $1

	echo "\nRunning BibTeX:" >> $TMP
	bibtex "$NAME.aux" >$TMP && echo -n '=' && \
	latex -shell-escape $NAME_NO_PATH.tex >$TMP && echo -n '='
}

function PDF {
	echo -n "PDF LaTeX: "
	REQ_WD $1
	BIBLIO $1

	echo "\nRunning PDFLaTeX:" >> $TMP
	pdflatex -shell-escape $NAME_NO_PATH.tex >$TMP
	echo '=]'
}

function SOFTCLEAN {
	FILENAME $1

	echo "\nCleaning (soft)" >> $TMP
	rm -rf  $NAME.aux \
		$NAME.log \
		$NAME.synctex.gz \
		$NAME.toc \
		$NAME.out \
		$NAME.bbl \
		_minted-$NAME \
		$NAME.blg \
		$NAME.dvi \
		$NAME.idv \
		$NAME.lg
}

function CLEAN {
	echo -n "CLEANING $1:"
	SOFTCLEAN $1
	echo " [Done]"
}

function HARDCLEAN {
	echo -n "HARD CLEANING $1: ["
	SOFTCLEAN $1
	echo -n "="
	echo "\nCleaning (hard):" >> $TMP
	rm -rf  $NAME.pdfÂ \
		$NAME.html
	echo "=]"
}

function HTML {
	echo -n "HTML LaTeX: $1"
	FILENAME $1

	echo "\nRunning HTML (pandoc):" >> $TMP
	pandoc $NAME.tex -o $NAME.html -t html5 >> $TMP
	echo " [Done]"
}

function HELP {
	echo " === HELP ==="
	echo ""
	echo "Syntax:"
	echo "  ./build COMMAND FILE(S)"
	echo ""
	echo "Commands:"
	echo "  PDF       Export to PDF"
	echo "  HTML      Export to HTML"
	echo "  CLEAN     Deletes build file"
	echo "  HARDCLEAN Deletes build files AND output files (PDF, HTML...)"
	echo "  DEP       Print the dependencies & display whether they are installed"
}

function DEPS {
	echo "The commands needed by this script are:"
	check "latex" "Compile LaTeX documents"
	check "bibtex" "Organize bibliographies in LaTeX documents"
	check "pdflatex" "Export LaTeX to PDF"
	check "pandoc" "Export LaTeX to HTML"
	check "dirname" "Get the directory in which a file is"
	check "basename" "Get the name of the file, without the directory"
}

function check {
	if hash $1 2>/dev/null
	then
		echo "Found:   $1 -- $2"
	else
		echo -e "\033[0;31mMISSING: $1\033[0m -- $2"
	fi
}

case $1 in
pdf|PDF)
	shift;PDF $*;;
html|HTML)
	shift;HTML $*;;
clean|CLEAN)
	shift;CLEAN $*;;
hardclean|HARDCLEAN|HARD|hard)
	shift;HARDCLEAN $*;;
dependencies|dep)
	DEPS;;
*)
	echo "You need to specify a goal.";HELP;;
esac
